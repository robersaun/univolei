/* =========================
   BASE / DESKTOP (padrão)
   ========================= */
   div.stVerticalBlock.st-emotion-cache-tn0cau.e52wr8w2
   {
    padding: 0%;
   }

  
/* Container e títulos */
.block-container { padding: .15rem 0; max-width: 1600px; }
h1, h2, h3 { margin: .05rem 0 .1rem; }

.header-title{
  font-size: 1.6rem; font-weight: 900; display:flex; align-items:center; gap:6px;
  margin:.05rem 0 .1rem;
}

/* Cartão de seção */
.sectionCard{
  border:1px solid #e1e6ef; background:#fff; border-radius:8px;
  padding:4px 6px; margin:4px 0; overflow:hidden; top: -50px; position:relative;
}

/* Controles gerais */
.stButton button,
.stTextInput input,
.stSelectbox,
.stNumberInput input,
.stRadio,
.stDataFrame{ font-size:.85rem; }

.stTextInput > div > div > input{ padding:.12rem 0; }
.stSelectbox > div > div{ padding:.10rem 0; }
.stNumberInput input{ padding:.10rem 0; }

/* Botões padrão */
.stButton button{
  white-space:normal !important; overflow-wrap:anywhere;
  padding:.22rem .5rem; font-size:.85rem;
  border:1px solid #e1e6ef; border-radius:6px; background:#fff;
  max-width:100%;
}

/* Botões super compactos (aplique .btn-xxs no contêiner) */
.btn-xxs .stButton button{
  padding:.08rem .20rem !important; font-size:.70rem !important;
  line-height:1 !important; min-height:auto !important;
}

/* Botões pequenos (aplique .small-btn no contêiner) */
.small-btn .stButton button{
  padding:.12rem .25rem !important; font-size:.72rem !important;
}

/* Links de página com cara de botão */
.btn-linklike a, .btn-linklike button{
  display:inline-block; padding:.22rem .5rem; font-size:.85rem;
  border:1px solid #e1e6ef; border-radius:6px; background:#fff;
  text-decoration:none !important; color:inherit !important;
}

/* Radios */
div[role="radiogroup"] > label{ margin-right:.35rem; font-size:.85rem; }

/* Badges */
.badge {
  background:#f5f7fb;
  border:1px solid #e1e6ef;
  border-radius:999px;
  padding:3px 6px;
  font-size:.90rem;
  white-space:nowrap;

  display: flex;               /* ativa flexbox */
  align-items: center;         /* centraliza na vertical */
  justify-content: center;     /* centraliza na horizontal */
}

.badge b{ font-weight:800; }

/* Tabelas comuns */
.custom-table{ width:100%; border-collapse:collapse; margin:3px 0; font-size:.78rem; }
.custom-table th{ background:#f0f2f6; padding:4px; text-align:left; border:1px solid #ddd; }
.custom-table td{ padding:4px; border:1px solid #ddd; }
.custom-table tr:nth-child(even){ background:#f9f9f9; }

/* Tabelas KPI */
.kpi-table{ width:100%; border-collapse:collapse; margin:3px 0; font-size:.78rem; }
.kpi-table th{ background:#4a6fa5; color:#fff; padding:4px; text-align:left; border:1px solid #ddd; }
.kpi-table td{ padding:4px; border:1px solid #ddd; }
.kpi-table tr:nth-child(even){ background:#f0f7ff; }
.kpi-table tr:nth-child(odd){ background:#e6f2ff; }

/* Lista de jogadoras (se usada) */
.jogadoras-container{ display:flex; flex-wrap:wrap; gap:2px; margin:1px 0 2px; }
.jogadoras-container button{
  padding:.12rem .25rem !important; width:auto !important; max-width:100% !important;
  line-height:1 !important; border-radius:6px; font-size:.75rem !important;
  white-space:normal !important; overflow-wrap:anywhere;
}

/* Botão ADV (aplique .pill-adv no contêiner) */
.pill-adv .stButton button{
  background:#263238 !important; color:#fff !important; border:1px solid #000 !important;
}

/* Placar */
.score-box{ text-align:center; }
.score-team{ font-size:40px; font-weight:800; }
.score-points{ font-size:200px; font-weight:900; line-height:1; }
.score-x{ font-size:40px; font-weight:900; padding-top:10px; }
.set-summary{ font-size:1.12rem; font-weight:800; font-size: 20px; }

/* KPIs */
.kpi{ display:flex; flex-direction:column; gap:1px; border:1px solid #e1e6ef; border-radius:6px; padding:4px 6px; }
.kpi .v{ font-size:1.1rem; font-weight:900; }
.kpi .t{ font-size:.75rem; opacity:.85; }

/* Colunas com menos espaçamento lateral */
.stColumn{ padding-left:2px; padding-right:2px; }

/* Remove espaçamentos verticais extras */
.block-container div[data-testid="stVerticalBlock"] > div:has(> div.element-container){ margin:0; }

/* Compactação pontual */
.tight-block div[data-testid="stVerticalBlock"] > div:has(> div.element-container){ margin:0 !important; }
.tight-block [data-testid="stHorizontalBlock"]{ margin:2px 0 !important; }
.tight-block .stButton button{ margin:2px 0 !important; }

/* =========================
   FIXES GERAIS (desktop e mobile)
   ========================= */

/* Tira qualquer “respiro” em volta de components.html (iframes) */
.element-container:has(> iframe){ margin:0 !important; padding:0 !important; }
/* Garante iframe sem borda/fundo e 100% */
iframe[title^="streamlit-component"]{
  display:block !important; width:100% !important; border:0 !important; background:transparent !important;
}

/* Desarma min-width chato das colunas (funciona em todas as larguras) */
.stColumn{ min-width:0 !important; width:auto !important; flex:1 1 0 !important; }

/* “Mobile-only” (conteúdos HTML auxiliares) */
.mobile-only{ display:none !important; }

/* =========================
   MOBILE (<= 480px / 640px)
   ========================= */

@media (max-width:480px){
  /* Textos menores */
  .header-title{ font-size:1.05rem !important; gap:4px !important; }
  .badge{ font-size:.78rem; padding:2px 4px; }

  /* Tabelas mais compactas */
  .custom-table, .kpi-table{ font-size:12px !important; }
  .custom-table th, .custom-table td,
  .kpi-table th, .kpi-table td{ padding:3px !important; }

  /* Container com margens laterais curtas */
  .block-container{ padding:.08rem 6px !important; }
  .stColumn{ padding-left:1px; padding-right:1px; }

  /* Inputs e radios menores */
  .stTextInput > div > div > input,
  .stNumberInput input{ padding:4px 0 !important; font-size:12px !important; }
  div[role="radiogroup"] > label{ margin-right:6px !important; font-size:12px !important; padding:1px 3px !important; }

  /* Cards/KPI mais compactos */
  .sectionCard{ padding:6px !important; border-radius:6px !important;  top: -50px;}
  .kpi{ padding:3px 4px !important; border-radius:5px !important; }
  .kpi .v{ font-size:1rem !important; }
  .kpi .t{ font-size:.70rem !important; }

  /* Placar mais compacto */
  .score-team{ font-size:13px !important; }
  .score-points{ font-size:38px !important; }
  .score-x{ font-size:26px !important; padding-top:6px !important; }
  .set-summary{ font-size:.94rem !important; }


  

/* Regras contra min-width do Streamlit em layout estreito */
@media (max-width:640px){
  [data-testid="stColumn"]{
    min-width:0 !important; width:auto !important; flex:0 0 auto !important;
  }
  [data-testid="stColumn"] > div{
    min-width:0 !important; width:auto !important;
  }
  [class*="st-emotion-cache"][data-testid="stColumn"]{
    min-width:0 !important; width:auto !important; flex:0 0 auto !important;
  }
  [data-testid="stColumn"] .stButton > button,
  [data-testid="stColumn"] button{
    width:auto !important; min-width:0 !important; display:inline-block !important;
  }
  [data-testid="stHorizontalBlock"]{ align-items:flex-start !important; gap:6px !important; }
}
/* Tira altura mínima herdada quando há iframes vazios (desktop) */
.element-container:has(> iframe) > div { min-height: 0 !important; }

/* Evita gap em blocos horizontais padrão do Streamlit */
[data-testid="stHorizontalBlock"] { margin-top: 2px !important; margin-bottom: 2px !important; }

/* Parágrafos e títulos de seção mais "colados" */
.block-container p { margin: 2px 0 !important; }
.block-container hr { margin: 4px 0 !important; }

/* Radios/inputs com margem inferior mínima */
.stRadio, .stSelectbox, .stTextInput, .stNumberInput { margin-bottom: 4px !important; }

/* =========================
   DENSIDADE MÁXIMA (desktop ≥ 992px)
   ========================= */
@media (min-width: 200px){
  .block-container{ padding:.05rem 0 !important; }
  .sectionCard{ padding:2px 4px !important; margin:2px 0 !important; top: -50px;}

  /* Menos ar entre blocos e colunas */
  [data-testid="stVerticalBlock"] > div{ margin:2px 0 !important; }
  [data-testid="stHorizontalBlock"]{ margin:2px 0 !important; gap:4px !important; }
  .stColumn{ padding-left:1px !important; padding-right:1px !important; }

  /* Inputs e selects mais finos */
  .stTextInput > div > div > input,
  .stNumberInput input{ padding:.08rem 0 !important; }
  .stSelectbox > div > div{ padding:.06rem 0 !important; }

  /* Radios mais colados */
  div[role="radiogroup"] > label{ margin-right:.25rem !important; }

  /* Botões menores */
  .stButton button{
    padding:.14rem .35rem !important;
    font-size:.78rem !important;
    line-height:1.1 !important;
  }

  /* Tabelas mais densas */
  .custom-table, .kpi-table{ font-size:.72rem !important; }
  .custom-table th, .custom-table td,
  .kpi-table th, .kpi-table td{ padding:2px 3px !important; }

  /* Placar mais enxuto */
  .score-team{ font-size:200px !important; }
  .score-points{ font-size:250px !important; }
  .score-x{ font-size:200px !important; padding-top:4px !important; }
  .set-summary{ font-size:1rem !important; }

  /* Quadra menor no desktop */
  #uv-court-main, #uv-court-gm{ height:320px !important; }
}




/* ==============================
   MOBILE GAME – SET/FILTROS FIX
   ============================== */
   /*     MOBILE   */
  /* Quadra mais baixa */
  #uv-court-main, #uv-court-gm{ height:260px !important; }

  /* Conteúdo “mobile-only” visível só aqui */
  .mobile-only{ display:block !important; }

  /* Botões HTML auxiliares (linhas mobile) */
  #gm-mob-players, #gm-mob-quick{ margin:2px 0 !important; }
  .uv-row{ display:flex; flex-wrap:wrap; gap:6px; }
  .uv-btn{
    padding:6px 8px; font-size:13px; line-height:1; border-radius:8px;
    border:1px solid #ccd3e0; background:#f7f9ff;
    width:auto; min-width:36px; min-height:26px;
  }
  .uv-btn.adv{ background:#263238; color:#fff; border-color:#000; opacity:.95; }
  .uv-btn.rede{ background:#ffe5e5; border-color:#ffb0b0; }
}

   /* ====== ANTI-DUPLICAÇÃO DETERMINÍSTICA (MODO JOGO, MOBILE) ====== */
/* Mantenha SOMENTE os botões HTML (menores) no mobile; esconda os de Streamlit */
@media (max-width:640px)
{
  /* Quando o wrapper do GM estiver presente */
  .gm-tight .gm-desktop-only{ display:none !important; }

  /* Fallback: se por algum motivo o wrapper não vier, mas as barras HTML existirem,
     ainda assim oculte os desktop-only */
  body:has(#gm-mob-players) .gm-desktop-only,
  body:has(#gm-mob-quick)   .gm-desktop-only{ display:none !important; }
}
/* ====== FIM ANTI-DUPLICAÇÃO ====== */
@media (max-width: 640px){

  /* Evitar extrapolar: botões super compactos ocupam a largura da coluna e podem quebrar texto */
  .btn-xxs .stButton > button{
    width: 100% !important;
    min-width: 0 !important;
    white-space: normal !important;
    overflow-wrap: anywhere !important;
    word-break: break-word !important;
    display: inline-flex !important;
    align-items: center; justify-content: center;
  }

  /* Filtro Gráficos: permitir quebra em múltiplas linhas dentro da coluna */
  .stRadio [role="radiogroup"]{
    display: flex !important;
    flex-wrap: wrap !important;
    gap: 6px !important;
  }
  .stRadio [role="radiogroup"] > *{
    flex: 0 0 auto !important;
    max-width: 100% !important;
  }
}
/* ===== END: MOBILE GAME – SET/FILTROS FIX ===== */


/* =======================================
   MOBILE GAME – SET BUTTONS MICRO (final)
   ======================================= */
@media (max-width: 640px){
  /* container */
  .btn-xxs{ margin:0 !important; padding:0 !important; }
  .btn-xxs [data-testid="stHorizontalBlock"]{
    display:flex !important;
    flex-wrap: nowrap !important;
    gap: 4px !important;
  }
  /* cards e botões */
  .btn-xxs .stButton{ margin:0 !important; }
  .btn-xxs .stButton > button{
    width: auto !important;
    min-width: 0 !important;
    padding: 2px 6px !important;
    font-size: .72rem !important;
    line-height: 1 !important;
    min-height: 24px !important;
    white-space: nowrap !important;
  }
}
/* ===== END: MOBILE GAME – SET BUTTONS MICRO ===== */


/* ============================================
   MOBILE GAME – SET BUTTONS FORCE INLINE SMALL
   ============================================ */
@media (max-width: 640px){
  .btn-xxs{ display: inline-block !important; margin:0 !important; padding:0 !important; }
  .btn-xxs .stButton{
    width: auto !important;
    display: inline-block !important;
    margin: 0 !important;
  }
  .btn-xxs .stButton > button{
    width: auto !important;
    min-width: 0 !important;
    padding: 1px 6px !important;
    font-size: .70rem !important;
    line-height: 1 !important;
    min-height: 22px !important;
    white-space: nowrap !important;
  }
}
/* ===== END: MOBILE GAME – SET BUTTONS FORCE INLINE SMALL ===== */


/* =====================================
   MOBILE GAME – WHITESPACE COMPACT
   ===================================== */
@media (max-width: 640px){
  /* Compactar o cartão principal no mobile */
  .sectionCard{ top: -50px; padding: 8px 10px !important; }
  .sectionCard{ top: -50px!important; }
  

  /* Reduzir espaços verticais entre elementos dentro do card */
  .sectionCard .element-container{ margin-bottom: 4px !important; }
  .sectionCard [data-testid="stVerticalBlock"]{ gap: 4px !important; }
  .sectionCard [data-testid="stHorizontalBlock"]{ margin: 0 !important; }

  /* Títulos/legendas e markdown mais colados */
  .sectionCard .stMarkdown, 
  .sectionCard h1, .sectionCard h2, .sectionCard h3, .sectionCard h4, .sectionCard p{
    margin: 2px 0 !important; padding: 0 !important;
  }

  /* Grupo SET micro + gap mínimo */
  .btn-xxs [data-testid="stHorizontalBlock"]{ gap: 2px !important; }
  .btn-xxs .stButton{ margin: 0 !important; }
  .btn-xxs .stButton > button{
    padding: 1px 6px !important;
    font-size: .68rem !important;
    line-height: 1.0 !important;
    min-height: 20px !important;
  }

  /* “Filtros Gráficos” e componentes com menos espaço */
  .sectionCard .stRadio{ margin: 0 !important; }
  .sectionCard .stRadio [role="radiogroup"]{ gap: 4px !important; flex-wrap: wrap !important; }
  .sectionCard .stSelectbox, .sectionCard .stNumberInput, .sectionCard .stTextInput{ margin: 0 !important; }
  .sectionCard .stSelectbox > div > div{ padding: .08rem .24rem !important; }
}
/* ===== END: MOBILE GAME – WHITESPACE COMPACT ===== */


/* =====================================================
   MOBILE GAME – SET BUTTONS LIKE TOP TOOLBAR (FINAL)
   ===================================================== */
@media (max-width: 640px){
  /* container enxuto e em linha */
  .btn-xxs{ margin:0 !important; padding:0 !important; display:block !important; }
  .btn-xxs [data-testid="stHorizontalBlock"]{
    display:flex !important; flex-wrap:nowrap !important; gap:4px !important; align-items:center !important;
  }
  .btn-xxs .element-container{ margin-bottom:0 !important; }

  /* botões com o mesmo "look" dos iniciais (pílula pequena, inline) */
  .btn-xxs .stButton{ margin:0 !important; display:inline-block !important; }
  .btn-xxs .stButton > button{
    width:auto !important; min-width:0 !important;
    padding:3px 10px !important;
    font-size:.75rem !important; line-height:1 !important; min-height:22px !important;
    border-radius:9999px !important;
    white-space:nowrap !important;
    display:inline-flex !important; align-items:center; justify-content:center;
  }
}
/* ===== END: MOBILE GAME – SET BUTTONS LIKE TOP TOOLBAR (FINAL) ===== */
.uv-css-ok{ display:inline-block !important; background:#16a34a; color:#fff; padding:2px 8px; border-radius:9999px; font-size:.75rem; }

/* ==== MOBILE (Render) — grid estável para Jogadoras/Atalhos ==== */
@media (max-width: 740px){
  /* O bloco de colunas dessas seções vira grid com wrap */
  .gm-players-row,
  .gm-quick-row{
    display: flex !important;
    flex-wrap: wrap !important;
    gap: 6px !important;
    align-items: stretch !important;
  }
  /* Cada coluna fica com 1/6 da largura (duas linhas de 6) */
  .gm-players-row > div[data-testid="column"],
  .gm-quick-row  > div[data-testid="column"]{
    flex: 0 0 calc(100%/6) !important;
    width: calc(100%/6) !important;
    max-width: calc(100%/6) !important;
    min-width: 0 !important;
  }
  /* Botão ocupa 100% da célula, pílula compacta */
  .gm-players-row .stButton > button,
  .gm-quick-row  .stButton > button{
    width: 100% !important;
    display: inline-flex !important;
    align-items: center; justify-content: center;
    font-size: 14px !important;
    line-height: 1.15 !important;
    padding: 6px 0 !important;
    border-radius: 9999px !important;
  }
}
/* ==== Robustez extra no mobile para Jogadoras/Atalhos (Render) ==== */
@media (max-width: 740px){
  /* Se a classe estiver aplicada DIRETAMENTE no stHorizontalBlock */
  div.gm-players-row[data-testid="stHorizontalBlock"],
  div.gm-quick-row[data-testid="stHorizontalBlock"]{
    display: flex !important;
    flex-wrap: wrap !important;
    gap: 6px !important;
    align-items: stretch !important;
  }

  /* Aceitar colunas como DESCENDENTES (não apenas filhos diretos) */
  .gm-players-row div[data-testid="column"],
  .gm-quick-row  div[data-testid="column"]{
    flex: 0 0 calc(100%/6) !important;
    width: calc(100%/6) !important;
    max-width: calc(100%/6) !important;
    min-width: 0 !important;
    box-sizing: border-box !important;
  }

  /* Botão ocupa 100% da célula */
  .gm-players-row .stButton > button,
  .gm-quick-row  .stButton > button{
    width: 100% !important;
    display: inline-flex !important;
    align-items: center; justify-content: center;
  }
}

/* HARD OVERRIDE (Render): classe gerada pelo Emotion que você viu no DevTools */
@media (max-width: 740px){
  .st-emotion-cache-52v4ru{
    min-width: 0 !important;
    width: auto !important;
    max-width: 100% !important;
    box-sizing: border-box !important;
  }
}

/* Fallback genérico (nome da classe pode mudar): force dentro das linhas Jogadoras/Atalhos */
@media (max-width: 740px){
  .gm-players-row [class^="st-emotion-cache"],
  .gm-quick-row  [class^="st-emotion-cache"]{
    min-width: 0 !important;
    width: auto !important;
    max-width: 100% !important;
    box-sizing: border-box !important;
  }
}


/* === UV PATCH (compact + undo color + scoreboard tweaks) === */
.gm-score-row { margin: 2px 0 !important; }
.gm-preline { display:none !important; } /* esconde linha antiga "Set N — Placar" sem remover do código */

.pill-undo .stButton button{
  background:#b91c1c !important; color:#fff !important; border:1px solid #7f1d1d !important;
}

/* fontes um pouco maiores no placar */
.score-points{ font-size:56px; }      /* era 52 */
@media (max-width:480px){
  .score-points{ font-size:42px !important; }  /* era 38 */
}

/* cola mais o texto da direita do placar */
.set-summary{ margin-top:2px !important; }
















/* Remove margem superior do container que envolve a badge */
.stElementContainer .stMarkdown {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
  top: -100px !important;
}

/* Remove margem dos <p> dentro do Markdown */
.stMarkdown p {
  margin-top: -10px !important;
  margin-bottom: 0 !important;
  padding: 0 !important;
}

/* Remove margem dos containers acima da badge */
div[data-testid="stVerticalBlock"] > div {
  margin-top: 2px !important;
}

.badge {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}


/* =========================================================
   DIV-LINHAS: controles finos de espaçamento vertical
   ========================================================= */
#div1, #div2, #div3, #div4, #div5, #div6, #div7{
  margin: -200px 0 !important;
  padding: 0 !important; 
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/* Placar quase colado à quadra, e filtros colados na quadra */
#div5{ margin-bottom: 2px !important; }
#div6{ margin-top: 0 !important; margin-bottom: 2px !important; }
#div7{ margin-top: 2px !important; }

/* Quando dentro de um sectionCard, tiramos “ar” automático desses blocos */
.sectionCard #div1, .sectionCard #div2, .sectionCard #div3,
.sectionCard #div4, .sectionCard #div5, .sectionCard #div6, .sectionCard #div7{
  display:block;   /* garante que apareçam no DOM */
}
/* =====================================================
   ULTRA COMPACT – div1..div7 (Modo Jogo)
   Colar no FINAL do univolei.css
   ===================================================== */

/* 1) Zera/gira o “ar” do WRAPPER que o Streamlit cria em volta de cada linha */
.element-container:has(#div1),
.element-container:has(#div2),
.element-container:has(#div3),
.element-container:has(#div4),
.element-container:has(#div5),
.element-container:has(#div6),
.element-container:has(#div7){
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/* 2) E também do DIV interno que o Streamlit insere dentro do wrapper */
.element-container:has(#div1) > div,
.element-container:has(#div2) > div,
.element-container:has(#div3) > div,
.element-container:has(#div4) > div,
.element-container:has(#div5) > div,
.element-container:has(#div6) > div,
.element-container:has(#div7) > div{
  margin: 0 !important;
  padding: 0 !important;
}

/* 3) Remove margens típicas de markdown/títulos nessas linhas */
.element-container:has(#div1) .stMarkdown,
.element-container:has(#div2) .stMarkdown,
.element-container:has(#div3) .stMarkdown,
.element-container:has(#div4) .stMarkdown,
.element-container:has(#div5) .stMarkdown,
.element-container:has(#div6) .stMarkdown,
.element-container:has(#div7) .stMarkdown{
  margin: 0 !important;
  padding: 0 !important;
}

/* 4) Os blocos horizontais dessas linhas também sem “respiro” */
.element-container:has(#div1) [data-testid="stHorizontalBlock"],
.element-container:has(#div2) [data-testid="stHorizontalBlock"],
.element-container:has(#div3) [data-testid="stHorizontalBlock"],
.element-container:has(#div4) [data-testid="stHorizontalBlock"],
.element-container:has(#div5) [data-testid="stHorizontalBlock"],
.element-container:has(#div6) [data-testid="stHorizontalBlock"],
.element-container:has(#div7) [data-testid="stHorizontalBlock"]{
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

/* 5) Cola o bloco da quadra/div5 com as duas linhas seguintes (div6, div7) */
.element-container:has(#div5) + .element-container,
.element-container:has(#div5) + .element-container + .element-container{
  margin-top: 0 !important;
}

/* 6) Botões/inputs nessas linhas sem margens adicionais */
.element-container:has(#div1) .stButton,
.element-container:has(#div2) .stButton,
.element-container:has(#div3) .stButton,
.element-container:has(#div4) .stButton,
.element-container:has(#div5) .stButton,
.element-container:has(#div6) .stButton,
.element-container:has(#div7) .stButton{
  margin: 0 !important;
}
.element-container:has(#div1) .stButton > button,
.element-container:has(#div2) .stButton > button,
.element-container:has(#div3) .stButton > button,
.element-container:has(#div4) .stButton > button,
.element-container:has(#div5) .stButton > button,
.element-container:has(#div6) .stButton > button,
.element-container:has(#div7) .stButton > button{
  margin: 0 !important;
}

/* 7) (Opcional) Se ainda aparecer espaço, ative a linha abaixo para o container do card:
.sectionCard .element-container:has(#div1),
.sectionCard .element-container:has(#div2),
.sectionCard .element-container:has(#div3),
.sectionCard .element-container:has(#div4),
.sectionCard .element-container:has(#div5),
.sectionCard .element-container:has(#div6),
.sectionCard .element-container:has(#div7){ margin:0 !important; }
*/












/* =====================================================
   ULTRA COMPACT (por intervalo) — Jogadoras (#div3 ➜ #div4)
   Coloque este arquivo DEPOIS do seu univolei.css
   ===================================================== */

/* 0) Garanta que os marcadores não tenham margens negativas antigas */
#div1,#div2,#div3,#div4,#div5,#div6,#div7{ 
  margin: 0 !important; 
  padding: 0 !important; 
}

/* 1) Zere o wrapper que CONTÉM cada marcador */
.element-container:has(#div1),
.element-container:has(#div2),
.element-container:has(#div3),
.element-container:has(#div4),
.element-container:has(#div5),
.element-container:has(#div6),
.element-container:has(#div7){
  margin-top: 0 !important;
  margin-bottom: 0 !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/* 2) Define um gap padrão ultra-compacto para usar abaixo */
:root{ --uv-gap: 0px; }

/* 3) ENTRE #div3 (início) E #div4 (fim) — colar tudo */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)){
  margin: 0 !important;
  padding: 0 !important;
}

/* 3a) Dentro desses wrappers, zere margens internas padrão do Streamlit */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) [data-testid="stVerticalBlock"] > div{
  margin: var(--uv-gap) 0 !important;
}
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) [data-testid="stHorizontalBlock"]{
  margin: var(--uv-gap) 0 !important;
  gap: 4px !important; /* ajuste fino do espaço horizontal entre colunas/botões */
}
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) .stButton,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) .stSelectbox,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) .stRadio,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) .stTextInput,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) .stNumberInput,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)) .stMarkdown{
  margin: 0 !important;
}

/* 4) (Opcional) Se quiser o mesmo para ATALHOS (#div4 ➜ #div5), descomente abaixo:
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5)){
  margin: 0 !important;
  padding: 0 !important;
}
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5)) [data-testid="stVerticalBlock"] > div{
  margin: var(--uv-gap) 0 !important;
}
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5)) [data-testid="stHorizontalBlock"]{
  margin: var(--uv-gap) 0 !important;
  gap: 4px !important;
}
*/




/* =====================================================
   DEBUG VISUAL — MOSTRA o que o seletor está pegando
   Use apenas para teste; remova em produção.
   ===================================================== */
   .element-container:has(#div3){ outline:1px dashed #00a; outline-offset:2px; }
   .element-container:has(#div4){ outline:1px dashed #a00; outline-offset:2px; }
   
   /* Tudo que está ENTRE #div3 e #div4 fica com fundo levemente marcado */
   .element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)){
     background: rgba(0,0,0,0.02) !important;
   }
   

/* =====================================================
   UNI-VOLEI — ULTRA COMPACT *COM MARCA VISUAL*
   Intervalo: ENTRE #div3 (início) e #div4 (fim)
   Coloque ESTE arquivo DEPOIS do seu univolei.css
   ===================================================== */

/* === MARCA VISUAL (não remova) ====================== */
.element-container:has(#div3){ outline:2px dotted #1e3a8a; outline-offset:2px; }
.element-container:has(#div4){ outline:2px dotted #b91c1c; outline-offset:2px; }
/* Tudo ENTRE os marcadores fica com leve fundo para conferência */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)){
  background: rgba(0,0,0,.03) !important;
}

/* -----------------------------------------------------
   REGRAS GERAIS DOS MARCADORES (zera qualquer “ar” neles)
   ----------------------------------------------------- */
#div1,#div2,#div3,#div4,#div5,#div6,#div7{ margin:0 !important; padding:0 !important; }
.element-container:has(#div1),
.element-container:has(#div2),
.element-container:has(#div3),
.element-container:has(#div4),
.element-container:has(#div5),
.element-container:has(#div6),
.element-container:has(#div7){
  margin:0 !important; padding:0 !important;
}
/* zera o DIV interno que o Streamlit cria dentro do wrapper */
.element-container:has(#div1) > div,
.element-container:has(#div2) > div,
.element-container:has(#div3) > div,
.element-container:has(#div4) > div,
.element-container:has(#div5) > div,
.element-container:has(#div6) > div,
.element-container:has(#div7) > div{
  margin:0 !important; padding:0 !important;
}

/* -----------------------------------------------------
   CORTA O ESPAÇO IMEDIATAMENTE ANTES e DEPOIS dos marcadores
   (remove o “ar” acima do #div3 e abaixo do #div4)
   ----------------------------------------------------- */
.element-container:has(+ .element-container:has(#div3)){   /* anterior ao #div3 */
  margin-bottom: 0 !important; padding-bottom: 0 !important;
}
.element-container:has(#div4) + .element-container{         /* imediatamente após #div4 */
  margin-top: 0 !important; padding-top: 0 !important;
}

/* -----------------------------------------------------
   MODO ULTRA-COMPACTO *SÓ* ENTRE #div3 e #div4
   (aperta TUDO ao máximo, sem quebrar os botões)
   ----------------------------------------------------- */
:root{ --uv-gap-vert: 0px; --uv-gap-hz: 4px; --uv-btn-vpad: 2px; --uv-btn-hpad: 8px; }

/* Zera margens/paddings dos wrappers no intervalo */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4)){
  margin:0 !important; padding:0 !important;
}

/* Zera margens internas padrão do Streamlit no intervalo */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  [data-testid="stVerticalBlock"] > div{
  margin: var(--uv-gap-vert) 0 !important;
}
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  [data-testid="stHorizontalBlock"]{
  margin: var(--uv-gap-vert) 0 !important;
  gap: var(--uv-gap-hz) !important;
}

/* Legendas/Markdown/captions praticamente colados */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stMarkdown,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stCaptionContainer{
  margin: 0 !important; padding: 0 !important; line-height: 1.1 !important;
}

/* Componentes (radios, selects, inputs) colados */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stRadio,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stSelectbox,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stTextInput,
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stNumberInput{
  margin: 0 !important;
}
/* radios mais enxutos */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stRadio [role="radiogroup"] > label{
  margin-right: 8px !important; padding: 0 !important; line-height: 1 !important;
}

/* BOTÕES (jogadoras): mínimos aceitáveis no desktop */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stButton{ margin:0 !important; }
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  .stButton > button{
  padding: var(--uv-btn-vpad) var(--uv-btn-hpad) !important;
  min-height: 22px !important;
  line-height: 1 !important;
  border-radius: 10px !important;
  width: auto !important;
}

/* As colunas que contêm os botões sem respiro extra vertical */
.element-container:has(#div3) ~ .element-container:has(~ .element-container:has(#div4))
  [data-testid="column"]{
  padding-top: 0 !important; padding-bottom: 0 !important;
}

/* -----------------------------------------------------
   (OPCIONAL) Repita para ATALHOS (#div4 ➜ #div5)
   — descomente se quiser colar também a segunda faixa.
   ----------------------------------------------------- */
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5)){
  margin:0 !important; padding:0 !important;
}
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5))
  [data-testid="stVerticalBlock"] > div{ margin: var(--uv-gap-vert) 0 !important; }
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5))
  [data-testid="stHorizontalBlock"]{ margin: var(--uv-gap-vert) 0 !important; gap: var(--uv-gap-hz) !important; }
.element-container:has(#div4) ~ .element-container:has(~ .element-container:has(#div5)) .stButton > button{
  padding: var(--uv-btn-vpad) var(--uv-btn-hpad) !important; min-height: 22px !important; line-height: 1 !important;
}







/* ====================================================
   UV WHITESPACE KILLER — RANGE div3 ➜ div4 (v2)
   Mantém listras de debug e cola TUDO no meio.
   Basta injetar este CSS DEPOIS do univolei.css.
   ==================================================== */

/* Deixe as listras de debug visíveis (marcadores) */
.element-container:has(#div3){ outline:1px dashed #2b6cb0; outline-offset:2px; }
.element-container:has(#div4){ outline:1px dashed #c53030; outline-offset:2px; }

/* Classe aplicada via JS aos wrappers ENTRE #div3 e #div4 */
.element-container.uv-compact-34{
  margin:0 !important;
  padding:0 !important;
}

/* Zera margens internas padrão nesses wrappers */
.element-container.uv-compact-34 > div{ margin:0 !important; padding:0 !important; }
.element-container.uv-compact-34 [data-testid="stVerticalBlock"] > div{ margin:0 !important; }
.element-container.uv-compact-34 [data-testid="stHorizontalBlock"]{ margin:0 !important; gap:4px !important; }

/* Componentes comuns sem respiro */
.element-container.uv-compact-34 .stButton,
.element-container.uv-compact-34 .stSelectbox,
.element-container.uv-compact-34 .stRadio,
.element-container.uv-compact-34 .stTextInput,
.element-container.uv-compact-34 .stNumberInput,
.element-container.uv-compact-34 .stMarkdown,
.element-container.uv-compact-34 .stCaptionContainer{
  margin:0 !important; padding:0 !important;
}

/* Botões pílula ocupam 100% da célula e sem margem extra */
.element-container.uv-compact-34 .stButton > button{
  margin:0 !important;
  width:100% !important;
  min-width:0 !important;
  display:inline-flex !important;
  align-items:center; justify-content:center;
  line-height:1.05 !important;
  padding:6px 0 !important;
  border-radius:9999px !important;
}

/* Colunas dentro do range sem largura mínima */
.element-container.uv-compact-34 [data-testid="column"],
.element-container.uv-compact-34 [data-testid="column"] > div{
  min-width:0 !important; width:auto !important; max-width:100% !important;
}

/* Remover qualquer “respiro” de containers de iframe (se existirem) */
.element-container.uv-compact-34:has(> iframe){ margin:0 !important; padding:0 !important; }
.element-container.uv-compact-34 > iframe{ display:block !important; width:100% !important; border:0 !important; background:transparent !important; }

/* Pequeno ajuste visual no título 'Atalhos' quando estiver no range */
.element-container.uv-compact-34 .stMarkdown p,
.element-container.uv-compact-34 .stCaptionContainer p{ margin:0 !important; }

/* === (opcional) reduza ainda mais o espaçamento horizontal entre botões === */
/* .element-container.uv-compact-34 [data-testid="stHorizontalBlock"]{ gap:2px !important; } */


/* ===== GM HARD COMPACT: placar (#div5), quadra (#div6), filtros (#div7) ===== */

/* mata margens/paddings do wrapper .element-container desses IDs */
.element-container:has(#div5),
.element-container:has(#div6),
.element-container:has(#div7){
  margin:0 !important; padding:0 !important; height:auto !important; min-height:0 !important;
}

/* e também do DIV interno padrão do Streamlit */
.element-container:has(#div5) > div,
.element-container:has(#div6) > div,
.element-container:has(#div7) > div{
  margin:0 !important; padding:0 !important;
}

/* blocos horizontais/verticais dentro deles, sem “respiro” */
.element-container:has(#div5) [data-testid="stVerticalBlock"] > div,
.element-container:has(#div6) [data-testid="stVerticalBlock"] > div,
.element-container:has(#div7) [data-testid="stVerticalBlock"] > div{
  margin:0 !important;
}
.element-container:has(#div5) [data-testid="stHorizontalBlock"],
.element-container:has(#div6) [data-testid="stHorizontalBlock"],
.element-container:has(#div7) [data-testid="stHorizontalBlock"]{
  margin:0 !important; gap:4px !important;
}

/* cola os três blocos em sequência (…div4 -> div5 -> div6 -> div7) */
.element-container:has(#div4) + .element-container,
.element-container:has(#div5) + .element-container,
.element-container:has(#div6) + .element-container{
  margin-top:0 !important;
}

/* ajustes finos visuais */
.gm-score-row{ margin:0 !important; padding:0 !important; }
#div5, #div6, #div7{ margin:0 !important; padding:0 !important; }




/* Fallback sem :has — quando o JS marcar o wrapper com .uv-squash */
.element-container.uv-squash,
.element-container.uv-squash > div{
  margin:0 !important;
  padding:0 !important;
  min-height:0 !important;
}

/* colar itens do placar e da linha auxiliar */
.gm-score-row{ margin:0 !important; }
.gm-preline{ margin:0 !important; }

/* === UV DENSIDADE EXTREMA — compacta distância vertical entre linhas === */
.element-container{ margin:0 0 4px !important; padding:0 !important; }
[data-testid="stVerticalBlock"]{ gap:2px !important; }
[data-testid="stVerticalBlock"] > div{ margin:2px 0 !important; }
[data-testid="stHorizontalBlock"]{ margin:2px 0 !important; gap:4px !important; align-items:flex-start !important; }
.block-container p, .block-container h1, .block-container h2, .block-container h3, .block-container h4 { margin:2px 0 !important; }
.stRadio, .stSelectbox, .stTextInput, .stNumberInput, .stButton, .stDataFrame { margin:0 0 4px !important; }
.stMarkdown{ margin:0 !important; }
div[data-testid="stMarkdownContainer"] > p:empty { margin:0 !important; padding:0 !important; }

/* Remove offsets que empurravam cartões para baixo */
.sectionCard{ top: 0 !important; margin:2px 0 !important; padding:4px 6px !important; }
@media (max-width:640px){
  .sectionCard{ top: 0 !important; padding:6px 8px !important; }
}

/* Streamlit components (iframes) sem respiro */
.element-container:has(> iframe){ margin:0 !important; padding:0 !important; }
iframe.uv-collapse{ display:none !important; height:0 !important; min-height:0 !important; }

/* Placar — evitar altura exagerada no desktop */
.score-team{ font-size:28px !important; } /* valor razoável */
.score-x{ font-size:28px !important; padding-top:4px !important; }
.set-summary{ font-size:16px !important; }


/* ===== Debug: dotted guides (match style of #div3/#div4) ===== */
/* Em cima da linha que começa com "Resultado" (#div2) */
.element-container:has(#div2){ outline:2px dotted #1e3a8a !important; outline-offset:2px; }

/* Abaixo do placar (#div5) */
.element-container:has(#div5){ border-bottom:2px dotted #b91c1c !important; }

/* Acima e abaixo da faixa de componentes pós-quadra (#div7) */
.element-container:has(#div7){ border-top:2px dotted #b91c1c !important; border-bottom:2px dotted #b91c1c !important; }


/* ===============================
   HEADER/TOOLBAR TRANSPARENT FIX
   =============================== */
header[data-testid="stHeader"],
header[data-testid="stHeader"] *,
div[data-testid="stToolbar"],
div[data-testid="stDecoration"]{
  background-color: transparent !important;
  background: transparent !important;
  box-shadow: none !important;
}


/* ===== DOTTED GUIDES (precise, requested) ===== */
/* Em cima da linha 'Resultado' (#div2) */
.element-container:has(#div2){ border-top:2px dotted #1e3a8a !important; }

/* Abaixo do placar (#div5) */
.element-container:has(#div5){ border-bottom:2px dotted #b91c1c !important; }

/* Acima e abaixo da linha de componentes pós-quadra (#div7) */
.element-container:has(#div7){ border-top:2px dotted #b91c1c !important; border-bottom:2px dotted #b91c1c !important; }


/* ==========================================================
   COMPACT GAME AREAS — SAFE (apenas #div2, #div5, #div6, #div7)
   Reduz espaços exatamente nos blocos marcados na imagem.
   ========================================================== */

/* 1) Linha "Resultado" (#div2) e o bloco anterior imediato */
.element-container:has(#div2){
  margin-top: 4px !important;
  margin-bottom: 4px !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}
/* Ajusta o container imediatamente ANTERIOR à linha Resultado */
.element-container:has(+ .element-container:has(#div2)){
  margin-bottom: 4px !important;
}

/* 2) Placar (#div5) — antes e depois */
.element-container:has(#div5){
  margin-top: 4px !important;
  margin-bottom: 4px !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}
/* Ajusta o container imediatamente ANTERIOR ao placar */
.element-container:has(+ .element-container:has(#div5)){
  margin-bottom: 4px !important;
}

/* 3) Quadra (#div6) — acima e abaixo */
.element-container:has(#div6){
  margin-top: 4px !important;
  margin-bottom: 4px !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}
/* Container imediatamente DEPOIS da quadra (#div7) */
.element-container:has(#div6) + .element-container{
  margin-top: 4px !important;
}

/* 4) Faixa pós-quadra (#div7) */
.element-container:has(#div7){
  margin-top: 4px !important;
  margin-bottom: 4px !important;
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/* 5) Margens internas mínimas de títulos/markdown nesses blocos */
#div2 .stMarkdown p, #div2 h1, #div2 h2, #div2 h3,
#div5 .stMarkdown p, #div5 h1, #div5 h2, #div5 h3,
#div6 .stMarkdown p, #div6 h1, #div6 h2, #div6 h3,
#div7 .stMarkdown p, #div7 h1, #div7 h2, #div7 h3{
  margin-top: 0 !important;
  margin-bottom: 4px !important;
  padding: 0 !important;
}

/* 6) Evita respiro extra do container markdown pai imediato */
#div2 ~ div[data-testid="stMarkdownContainer"],
#div5 ~ div[data-testid="stMarkdownContainer"],
#div6 ~ div[data-testid="stMarkdownContainer"],
#div7 ~ div[data-testid="stMarkdownContainer"]{
  margin: 0 !important; padding: 0 !important;
}

